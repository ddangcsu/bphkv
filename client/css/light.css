/* put near the top of light.css */
[v-cloak] {
  visibility: hidden;
}

:root {
  --bg: #f7fafc;
  --card: #ffffff;
  --muted: #64748b;
  --text: #0f172a;
  --border: #e5e7eb;
  --border-strong: #d1d5db;
  --primary: #2563eb;
  --accent: #33a7fa;
  --danger: #f9a9a9;
  --focus: #93c5fd;
}

* {
  box-sizing: border-box;
}
body {
  margin: 0;
  font-family: Inter, system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;
  background: var(--bg);
  color: var(--text);
}

/* Topbar */
.topbar {
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  align-items: center;
  height: 50px;
  gap: 12px;
  padding: 0px 16px;
  border-bottom: 1px solid var(--border);
  background: var(--card);
  position: sticky;
  top: 0;
  z-index: 99;
}
.crumb-text {
  margin: 0;
  font-size: 1em;
}
.link {
  background: none;
  border: none;
  color: var(--primary);
  cursor: pointer;
  padding: 0;
  text-decoration: none;
}

/* Status bar (center) */
.statusbar {
  display: flex;
  justify-content: center;
}
.status {
  display: inline-flex;
  align-items: baseline;
  gap: 8px;
  padding: 4px 16px;
  border: 0px solid var(--border);
  border-radius: 10px;
  font-weight: 600;
  font-size: 0.92rem;
  background: #f8fafc;
  color: #334155;
}
.status[data-variant='success'] {
  background: #ecfdf5;
  border-color: #a7f3d0;
  color: #065f46;
}
.status[data-variant='warn'] {
  background: #fffbeb;
  border-color: #fde68a;
  color: #92400e;
}
.status[data-variant='error'] {
  background: #fef2f2;
  border-color: #fecaca;
  color: #991b1b;
}
.status[data-variant='info'] {
  background: #eff6ff;
  border-color: #bfdbfe;
  color: #1e3a8a;
}

/* Header action tabs (right) */
.actionbar {
  justify-self: end;
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 8px 8px;
}

/* Page + Card */
.page {
  padding: 8px;
}
.card {
  background: var(--card);
  border: 1px solid var(--border);
  border-radius: 5px;
  padding: 4px 16px 4px 16px;
  box-shadow: 0 6px 20px rgba(15, 23, 42, 0.06);
}
.toolbar {
  display: flex;
  gap: 12px;
  margin-bottom: 12px;
  top: 50px;
  position: sticky;
  z-index: 2;
  background-color: #ffffff;
}

.toolbar > .input {
  flex: 1 1 200px;
  width: auto;
  min-width: 200px;
}

/* Inputs */
.input {
  width: 100%;
  padding: 4px 4px;
  border: 1px solid var(--border-strong);
  color: var(--text);
  border-radius: 5px;
  font-size: 0.92rem;
  outline: none;
}
.input:focus {
  border-color: var(--primary);
  box-shadow: 0 0 0 3px var(--focus);
}

/* toolbar filter cluster */
.toolbar-filters {
  display: flex;
  gap: 0.65rem;
  flex-wrap: wrap;
  align-items: center;
  margin-left: 0.5rem; /* space after search input */
}

/* a single filter control (label + select) */
.toolbar-filter {
  display: inline-flex;
  gap: 0.5rem;
  align-items: center;
}

/* keep selects wide enough for labels */
.toolbar-filter .input {
  min-width: 10rem;
}

/* Table */
.table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 5px;
  margin-bottom: 5px;
}

.table th {
  padding: 4px 12px;
  text-align: left;
  vertical-align: middle;
  font-weight: 600;
}
.table td {
  padding: 4px 12px;
  text-align: left;
  vertical-align: middle;
}
.table tr {
  border-bottom: 1px solid var(--border);
}

.table thead th {
  background: #dceaf8;
}

/* zebra striping */
table.table tbody tr:nth-child(odd) {
  background: #f9f8f8;
}
table.table tbody tr:nth-child(even) {
  background: #e1ebfb;
}

/* optional: make inline links look like links inside tables */
.table a.link {
  text-decoration: none;
  cursor: pointer;
}

/* Badges */
.badge {
  text-transform: capitalize;
  font-weight: 600;
}
.badge[data-variant='Yes'] {
  color: var(--accent);
}
.badge[data-variant='No'] {
  color: var(--danger);
}

/* buttons */
/* Base defaults (mild step for light buttons) */
.btn {
  --btn-bg: #fff;
  --btn-fg: var(--text);
  --btn-border: var(--border-strong);

  /* default hover/active strengths */
  --hover-darken: 0.9; /* 90% of original lightness = subtle */
  --active-darken: 0.82;

  /* fallbacks for older browsers using color-mix */
  --hover-mix: 90%;
  --active-mix: 82%;

  padding: 8px 14px;
  background: var(--btn-bg);
  color: var(--btn-fg);
  border: 1px solid var(--btn-border);
  border-radius: 6px;
  cursor: pointer;
  transition: background-color 0.15s ease, border-color 0.15s ease, box-shadow 0.15s ease;
}

/* Variants */
.btn.primary {
  --btn-bg: var(--primary);
  --btn-fg: #fff;
  --btn-border: var(--primary);

  /* ðŸ”Ž Stronger steps so the change is obvious on a saturated blue */
  --hover-darken: 0.72; /* bigger jump */
  --active-darken: 0.62; /* press state */
  --hover-mix: 76%;
  --active-mix: 66%;
}

.btn.secondary {
  --btn-bg: var(--card);
  --btn-fg: var(--text);
  --btn-border: var(--border-strong);
}

.btn.accent {
  --btn-bg: var(--accent);
  --btn-fg: #fff;
  --btn-border: var(--accent);
}
.btn.danger {
  --btn-bg: var(--danger);
  --btn-fg: #fff;
  --btn-border: var(--danger);
}

/* Interactions only when enabled */
@supports (color(from white oklch l c h)) {
  .btn:not(:disabled, [aria-disabled='true'], .is-disabled):is(:hover, :focus-visible) {
    background: color(from var(--btn-bg) oklch calc(l * var(--hover-darken)) c h);
    border-color: color(from var(--btn-border) oklch calc(l * var(--hover-darken)) c h);
  }
  .btn:not(:disabled, [aria-disabled='true'], .is-disabled):active {
    background: color(from var(--btn-bg) oklch calc(l * var(--active-darken)) c h);
    border-color: color(from var(--btn-border) oklch calc(l * var(--active-darken)) c h);
  }
}

/* Fallback for older browsers (no relative color syntax) */
@supports not (color(from white oklch l c h)) {
  .btn:not(:disabled, [aria-disabled='true'], .is-disabled):is(:hover, :focus-visible) {
    background: color-mix(in oklch, var(--btn-bg) var(--hover-mix), black);
    border-color: color-mix(in oklch, var(--btn-border) var(--hover-mix), black);
  }
  .btn:not(:disabled, [aria-disabled='true'], .is-disabled):active {
    background: color-mix(in oklch, var(--btn-bg) var(--active-mix), black);
    border-color: color-mix(in oklch, var(--btn-border) var(--active-mix), black);
  }
}

/* Focus ring */
.btn:not(:disabled, [aria-disabled='true'], .is-disabled):focus-visible {
  outline: none;
  box-shadow: 0 0 0 3px var(--focus);
}

/* Disabled: inert */
.btn:is(:disabled, [aria-disabled='true'], .is-disabled) {
  background: #cecfcf;
  color: #fff;
  border-color: #cecfcf;
  cursor: not-allowed;
  pointer-events: none;
  box-shadow: none;
}

/* Small variant (unchanged) */
.btn.small,
.btn--sm {
  padding: 4px 6px;
  font-size: 0.9rem;
  line-height: 1.1;
  border-radius: 5px;
}
.btn.small i,
.btn--sm i {
  font-size: 0.9em;
}

/* Base grid */
.grid {
  --gap: 0.75rem;

  /* per-breakpoint column plan (defaults) */
  --cols-xl: 4; /* â‰¥1200px */
  --cols-lg: 4; /* 900-1199px */
  --cols-md: 2; /* 600-899px */
  --cols-sm: 1; /* <600px */

  display: grid;
  gap: var(--gap);
  padding-top: 8px;
  padding-bottom: 8px;

  /* default at widest */
  grid-template-columns: repeat(var(--cols-xl), minmax(0, 1fr));
  grid-auto-flow: row dense; /* lets smaller items backfill gaps nicely */
}

/* utility */
.col-span-2 {
  grid-column: span 2;
}

/* (optional) helpers if you ever need them */
.start-2 {
  grid-column-start: 2;
} /* force start in column 2 */

/* pick the plan at each breakpoint */
@media (max-width: 1199px) {
  .grid {
    grid-template-columns: repeat(var(--cols-lg), minmax(0, 1fr));
  }
}
@media (max-width: 799px) {
  .grid {
    grid-template-columns: repeat(var(--cols-md), minmax(0, 1fr));
  }
}
@media (max-width: 599px) {
  .grid {
    grid-template-columns: repeat(var(--cols-sm), minmax(0, 1fr));
  }
  .col-span-2 {
    grid-column: 1 / -1;
  }
}

/* Variants: define the plan (no direct grid-template here) */
.grid.col3 {
  --cols-xl: 3;
  --cols-lg: 3;
  --cols-md: 3;
  --cols-sm: 1;
}
.grid.col5 {
  --cols-xl: 5;
  --cols-lg: 4;
  --cols-md: 2;
  --cols-sm: 1;
}
.grid.col7 {
  --cols-xl: 7; /* full width: 8 cols */
  --cols-lg: 4; /* then 2 rows Ã— 4 cols */
  --cols-md: 2; /* then 4 rows Ã— 2 cols */
  --cols-sm: 1; /* then 8 rows Ã— 1 col  */
}
.grid.col8 {
  --cols-xl: 8; /* full width: 8 cols */
  --cols-lg: 4; /* then 2 rows Ã— 4 cols */
  --cols-md: 2; /* then 4 rows Ã— 2 cols */
  --cols-sm: 1; /* then 8 rows Ã— 1 col  */
}

/* Rows */
.subpanel {
  --row-pad-y: 4px;
  --row-pad-x: 12px;
  margin-top: 10px;
  background: #fff;
  border: 1px solid var(--border);
  border-radius: 5px;
  padding: var(--row-pad-y) var(--row-pad-x);
}

.row {
  --row-pad-y: 4px;
  --row-pad-x: 12px;
  position: relative;
  margin-top: 5px;
  margin-bottom: 5px;
  background: #fff;
  border: 1px solid var(--border);
  border-radius: 5px;
  padding: var(--row-pad-y) var(--row-pad-x);
}

/* zebra striping */
.row:nth-child(odd) {
  background: #edf2fb;
}
.row:nth-child(even) {
  background: #ffffff;
}

.row-actions {
  position: absolute;
  top: 0rem;
  right: 0rem;
  padding: 0.1rem 0.1rem;
  font-size: 0.8rem;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  gap: 5px;
}

/* formtabs bar: tabs (left) + actions (right) */
.formtabs-bar {
  display: flex;
  align-items: flex-end;
  justify-content: space-between;
  gap: 12px;
  margin: 6px 0 0px;
  border-bottom: 2px solid var(--border); /* one shared strip */
  padding-bottom: 3px; /* prevent focus ring clipping */
  flex-wrap: wrap; /* wrap on small screens */
}

/* Let the nav inherit all your existing .formtabs styles, but no extra strip */
.formtabs-bar .formtabs {
  border-bottom: none; /* strip now lives on .formtabs-bar */
  margin: 0; /* tighten spacing when combined with actions */
}

/* Right-side actions */
.formtabs-actions {
  display: inline-flex;
  gap: 8px;
  margin-left: auto;
  padding-bottom: 1px; /* align baseline with the tab faces */
}

/* Optional: keep this bar visible when scrolled (tweak top to your header height) */
.formtabs-bar.sticky {
  position: sticky;
  top: 60px; /* adjust to match your header height */
  background: var(--card);
  z-index: 1;
}

/* formtabs */
.formtabs {
  display: flex;
  align-items: flex-end;
  gap: 6px;
  margin: 6px 0 12px;
  border-bottom: solid var(--border);
  padding-bottom: 1px;
  overflow-x: auto;
  overflow-y: hidden;
  scrollbar-gutter: stable;
}
.formtabs button {
  appearance: none;
  background: #f8fafc;
  color: var(--muted);
  border: 1px solid var(--border-strong);
  border-bottom: none;
  cursor: pointer;
  transition: background 0.15s ease, color 0.15s ease, border-color 0.15s ease;
  padding: 8px 10px;
  font-size: 0.95rem;
  border-radius: 12px 12px 0 0;
  margin-bottom: 0;
}
.formtabs button:hover {
  background: #d9dcf6;
  color: var(--text);
}
.formtabs button:focus-visible {
  outline: none;
  box-shadow: 0 0 0 3px var(--focus);
}
.formtabs .active {
  background: #a8b2f6;
  font-weight: 600;
  color: var(--text);
  border-color: var(--border-strong);
  position: relative;
  z-index: 1;
  box-shadow: 0 1px 0 var(--card), 0 -1px 0 rgba(0, 0, 0, 0.02) inset;
}
.formtabs .active::after {
  content: '';
  position: absolute;
  left: 0;
  right: 0;
  bottom: -1px;
  height: 1px;
  background: var(--card);
}

/* Panels */
.form .panel {
  background: var(--card);
  border: solid var(--border);
  border-top: none;
  border-radius: 0 0 6px 6px;
  padding: 8px;
}

/* Item header */
.item-header {
  display: flex;
  align-items: center;
  gap: 14px;
  min-height: 44px;
  padding: 4px 10px;
  background: #e6e6f8;
}
.item-header.bordered {
  margin-bottom: 12px;
  border-bottom: solid var(--border);
}
.item-header .title {
  margin: 0;
  font-size: 0.95em;
  font-weight: 600;
  color: var(--text);
}
.item-header .spacer {
  flex: 1 1 auto;
}
.item-header .actions {
  margin-left: auto;
  display: flex;
  gap: 8px;
  flex-wrap: wrap;
}
.item-header.compact {
  min-height: 0;
}

/* Errors */
.error {
  color: #b91c1c;
  font-weight: 500;
}

/* put a red asterisk before any .error element's text */
.error::before {
  content: '*';
  color: #d00;
  font-weight: 700;
  margin-right: 0.25em; /* adds a little space */
}

/* Checkbox (stacked label) */
label:has(> input[type='checkbox']) {
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  gap: 10px;
}
label:has(> input[type='checkbox']) input {
  margin: 0;
}
.check-lg {
  transform: scale(1.5);
  transform-origin: center;
  accent-color: #bbcdf6;
}

/* Segmented control + pager */
.seg {
  display: inline-flex;
  border: 2px solid var(--border-strong);
  border-radius: 4px;
  overflow: hidden;
}
.seg > button {
  border: none;
  background: #fff;
  padding: 6px 10px;
  cursor: pointer;
}
.seg > button.seg-active {
  background: #9fb4fa;
  color: #101010;
  font-weight: 600;
}
.pager {
  display: flex;
  align-items: center;
  gap: 10px;
  margin: 0px 0;
}
.pager-status {
  font-weight: 400;
  margin-left: 2px;
  margin-right: 2px;
}

.fade-enter-active,
.fade-leave-active {
  transition: opacity 0.15s ease;
}
.fade-enter-from,
.fade-leave-to {
  opacity: 0;
}

/* new: breadcrumb container used in header */
.crumb {
  display: flex;
  align-items: center;
}

/* new: generic horizontal action group */
.actions {
  display: inline-flex;
  align-items: center;
  gap: 8px;
}

/* optional: make action buttons in the table line up nicely */
.table td.actions {
  white-space: nowrap;
}

/* Header mini layout + menu */
.leftbar {
  display: flex;
  align-items: center;
  gap: 10px;
  min-width: 0;
}
.menu-wrap {
  position: relative;
}
.menu-btn {
  display: inline-flex;
  align-items: center;
  gap: 6px;
}
.menu-panel {
  position: absolute;
  top: 44px;
  left: 0;
  background: var(--card);
  border: 1px solid var(--border);
  border-radius: 6px;
  box-shadow: 0 6px 20px rgba(15, 23, 42, 0.12);
  padding: 8px;
  min-width: 250px;
  z-index: 100;
}
.menu-item {
  width: 100%;
  text-align: left;
}
.menu-panel .menu-item + .menu-item {
  margin-top: 6px;
}
.clickout-overlay {
  position: fixed;
  inset: 0;
  background: transparent;
  z-index: 4;
}
/* Establish container padding vars (match your existing paddings) */
/* Ensure the panel padding is addressable via a var */
.form .panel {
  --panel-pad: 8px; /* matches your .form .panel padding */
  padding: var(--panel-pad);
}

/* Reset default fieldset spacing so it doesn't fight the bleed */
.form .panel > fieldset {
  margin: 0;
  padding: 0;
  border: 0;
}

/* Make the fieldset header bleed to the panel edges */
.form .panel > fieldset > .item-header {
  /* break out of the panel padding on top + left/right */
  margin-block-start: calc(var(--panel-pad) * -1);
  margin-inline: calc(var(--panel-pad) * -1);
  margin-block-end: 0;

  /* inherit the panelâ€™s top corner rounding + own bg */
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
  background: var(--panel-header-bg, #e6e6f8);
}

/* (Optional) Keep content below the header from crowding it */
.form .panel > fieldset > .item-header + .row {
  margin-top: 8px;
}

.subpanel > .item-header {
  margin-block-start: calc(var(--row-pad-y) * -1);
  margin-inline: calc(var(--row-pad-x) * -1);
  margin-block-end: 0;
  margin-bottom: 0px;
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
  background: var(--row-header-bg, #e6e6f8);
}
.row > .item-header {
  margin-block-start: calc(var(--row-pad-y) * -1);
  margin-inline: calc(var(--row-pad-x) * -1);
  margin-block-end: 0;
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
  background: var(--row-header-bg, #e6e6f8);
}

/* Limit checkbox click target to the box itself (stacked checkbox labels) */
label:has(> input[type='checkbox']) {
  pointer-events: none; /* clicking the label won't toggle */
}
label:has(> input[type='checkbox']) > input[type='checkbox'] {
  pointer-events: auto; /* clicking the checkbox still works */
}

/* Visually distinguish disabled form controls */
.input:disabled,
select.input:disabled,
textarea.input:disabled {
  background: #f3f4f6; /* light gray */
  border-color: #e5e7eb; /* softer border */
  color: #6b7280; /* muted text */
  cursor: not-allowed; /* conveys non-editable */
  -webkit-text-fill-color: #6b7280; /* Safari text color fix */
}
.input:disabled::placeholder,
textarea.input:disabled::placeholder {
  color: #9ca3af; /* muted placeholder */
}
.input:disabled:focus,
select.input:disabled:focus,
textarea.input:disabled:focus {
  box-shadow: none; /* remove focus ring */
  border-color: #e5e7eb;
}

/* Checkboxes (your .check-lg) */
.check-lg:disabled {
  filter: grayscale(100%);
  opacity: 0.6;
  cursor: not-allowed;
}

/* Optional: dim the label when its control is disabled */
/*
label:has(> .input:disabled),
label:has(> select.input:disabled),
label:has(> .check-lg:disabled) {
  color: #545963;
}
*/

/* Optional: treat read-only similar to disabled but slightly brighter */
.input[readonly],
textarea.input[readonly] {
  background: #f8fafc;
  border-color: #e5e7eb;
  color: #475569;
  cursor: default;
}

/* ===== Dark theme: 1:1 with your light.css ===== */
/* Enable with: <html data-theme="dark"> */

:root[data-theme='dark'] {
  /* variables only â€” everything else below just overrides your hard-coded light colors */
  --bg: #0b1220;
  --card: #0f172a;
  --muted: #94a3b8;
  --text: #e5e7eb;
  --border: #1f2937;
  --border-strong: #334155;
  --primary: #60a5fa;
  --accent: #34d399;
  --danger: #ef4444;
  --focus: rgba(96, 165, 250, 0.35);
}

/* Global surfaces already use vars, just ensure body/card look right */
:root[data-theme='dark'] body {
  background: var(--bg);
  color: var(--text);
}
:root[data-theme='dark'] .card,
:root[data-theme='dark'] .subpanel,
:root[data-theme='dark'] .row,
:root[data-theme='dark'] .menu-panel,
:root[data-theme='dark'] .form .panel,
:root[data-theme='dark'] .topbar {
  background: var(--card);
  border-color: var(--border);
  color: var(--text);
}

/* Softer shadow on dark */
:root[data-theme='dark'] .card {
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.35);
}

/* TABLE header (light hard-code: #dceaf8) */
:root[data-theme='dark'] .table thead th {
  background: #111827;
  color: var(--text);
  border-color: var(--border);
}

/* TABLE zebra rows (light hard-codes: #ffffff / #edf2fb) */
:root[data-theme='dark'] table.table tbody tr:nth-child(odd) {
  background: #0f172a;
}
:root[data-theme='dark'] table.table tbody tr:nth-child(even) {
  background: #0b1220;
}

/* ROW zebra (light hard-codes: #edf2fb / #ffffff) */
:root[data-theme='dark'] .row:nth-child(odd) {
  background: #0f172a;
}
:root[data-theme='dark'] .row:nth-child(even) {
  background: #0b1220;
}

/* STATUS (light hard-codes) */
:root[data-theme='dark'] .status {
  background: #0f172a; /* instead of #f8fafc */
  color: #cbd5e1; /* was #334155 */
  border-color: transparent;
}
:root[data-theme='dark'] .status[data-variant='success'] {
  background: #052e2a;
  color: #34d399;
}
:root[data-theme='dark'] .status[data-variant='warn'] {
  background: #2a2105;
  color: #fbbf24;
}
:root[data-theme='dark'] .status[data-variant='error'] {
  background: #2a0b0b;
  color: #f87171;
}
:root[data-theme='dark'] .status[data-variant='info'] {
  background: #0a1b36;
  color: #93c5fd;
}

/* ITEM HEADER (light hard-code: #e6e6f8) */
:root[data-theme='dark'] .item-header,
:root[data-theme='dark'] .subpanel > .item-header,
:root[data-theme='dark'] .row > .item-header,
:root[data-theme='dark'] .form .panel > fieldset > .item-header {
  background: #1f2937;
  color: var(--text);
  border-color: var(--border);
}

/* FORMTABS (light hard-codes: #f8fafc, #d9dcf6, #a8b2f6) */
:root[data-theme='dark'] .formtabs {
  border-bottom-color: var(--border);
}
:root[data-theme='dark'] .formtabs button {
  background: #111827; /* base */
  color: var(--muted);
  border-color: var(--border-strong);
}
:root[data-theme='dark'] .formtabs button:hover {
  background: #1b2330; /* hover (was #d9dcf6) */
  color: var(--text);
}
:root[data-theme='dark'] .formtabs .active {
  background: #27314a; /* active (was #a8b2f6) */
  color: var(--text);
  border-color: var(--border-strong);
  box-shadow: 0 1px 0 var(--card), 0 -1px 0 rgba(255, 255, 255, 0.02) inset;
}
:root[data-theme='dark'] .formtabs .active::after {
  background: var(--card);
}

/* INPUTS (borders already from vars; placeholder contrast) */
:root[data-theme='dark'] .input {
  background: #0b1220;
  border-color: var(--border-strong);
  color: var(--text);
}
:root[data-theme='dark'] .input::placeholder,
:root[data-theme='dark'] textarea.input::placeholder {
  color: #74839a;
}

/* DISABLED/READONLY inputs parity on dark */
:root[data-theme='dark'] .input:disabled,
:root[data-theme='dark'] select.input:disabled,
:root[data-theme='dark'] textarea.input:disabled {
  background: #111827;
  border-color: #2b3340;
  color: #9aa0a6;
  -webkit-text-fill-color: #9aa0a6;
}
:root[data-theme='dark'] .input:disabled::placeholder,
:root[data-theme='dark'] textarea.input:disabled::placeholder {
  color: #6b7280;
}
:root[data-theme='dark'] .input[readonly],
:root[data-theme='dark'] textarea.input[readonly] {
  background: #0e1626;
  border-color: #233046;
  color: #c0cad6;
}

/* BUTTONS (your system uses CSS vars; only adjust disabled hard-code #cecfcf) */
:root[data-theme='dark'] .btn:is(:disabled, [aria-disabled='true'], .is-disabled) {
  background: #2b2f36;
  color: #9aa0a6;
  border-color: #2b2f36;
}

/* SEGMENTED control (light hard-codes: white base + #9fb4fa active) */
:root[data-theme='dark'] .seg {
  border-color: var(--border-strong);
}
:root[data-theme='dark'] .seg > button {
  background: #111827;
  color: var(--text);
}
:root[data-theme='dark'] .seg > button.seg-active {
  background: #27314a;
  color: #e5e7eb;
}

/* TABLE inline links maintain brand */
:root[data-theme='dark'] .table a.link {
  color: var(--primary);
}

/* Checkboxes (keep accent, just tweak when disabled) */
:root[data-theme='dark'] .check-lg {
  accent-color: #7aa2ff;
}
:root[data-theme='dark'] .check-lg:disabled {
  filter: none;
  opacity: 0.6;
}

/* Menu panel shadow reads nicer on dark */
:root[data-theme='dark'] .menu-panel {
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.45);
}
:root[data-theme='dark'] .btn {
  --btn-bg: #1e293b; /* slate background */
  --btn-fg: var(--text); /* light text */
  --btn-border: #475569; /* brighter slate border for visibility */
}

/* Primary */
:root[data-theme='dark'] .btn.primary {
  --btn-bg: var(--primary);
  --btn-fg: #fff;
  --btn-border: var(--primary);
}

/* Secondary */
:root[data-theme='dark'] .btn.secondary {
  --btn-bg: #0f172a; /* deep background */
  --btn-fg: var(--text);
  --btn-border: #475569; /* slightly lighter than base for contrast */
}
:root[data-theme='dark'] .btn.secondary:hover,
:root[data-theme='dark'] .btn.secondary:focus-visible {
  --btn-bg: #1e293b;
  --btn-border: #64748b; /* hover â†’ even more visible border */
}

/* Accent */
:root[data-theme='dark'] .btn.accent {
  --btn-bg: var(--accent);
  --btn-fg: #fff;
  --btn-border: var(--accent);
}

/* Danger */
:root[data-theme='dark'] .btn.danger {
  --btn-bg: var(--danger);
  --btn-fg: #fff;
  --btn-border: var(--danger);
}

/* Disabled */
:root[data-theme='dark'] .btn:is(:disabled, [aria-disabled='true'], .is-disabled) {
  --btn-bg: #2b2f36;
  --btn-fg: #9aa0a6;
  --btn-border: #4b5563; /* visible muted border */
}

/* ==== Dark mode: native control fixes ==== */
:root[data-theme='dark'] .input,
:root[data-theme='dark'] select.input,
:root[data-theme='dark'] textarea.input,
:root[data-theme='dark'] input.input {
  /* let the browser draw date pickers, spinners, etc. for dark */
  color-scheme: dark;
}

/* DATE PICKER (Chromium/WebKit) ------------------------- */
/* make the calendar icon visible on dark backgrounds */
:root[data-theme='dark'] input[type='date']::-webkit-calendar-picker-indicator {
  filter: invert(0.9) brightness(1.2) saturate(1.1);
  opacity: 0.95;
}

/* keep the text segments readable */
:root[data-theme='dark'] input[type='date']::-webkit-datetime-edit,
:root[data-theme='dark'] input[type='date']::-webkit-datetime-edit-fields-wrapper,
:root[data-theme='dark'] input[type='date']::-webkit-datetime-edit-text,
:root[data-theme='dark'] input[type='date']::-webkit-datetime-edit-year-field,
:root[data-theme='dark'] input[type='date']::-webkit-datetime-edit-month-field,
:root[data-theme='dark'] input[type='date']::-webkit-datetime-edit-day-field {
  color: var(--text);
  background: transparent;
}

/* optional: clearer hover on the calendar icon */
:root[data-theme='dark'] input[type='date']::-webkit-calendar-picker-indicator:hover {
  filter: invert(1) brightness(1.3);
}

/* NUMBER STEPPERS (Chromium/WebKit) --------------------- */
:root[data-theme='dark'] input[type='number']::-webkit-outer-spin-button,
:root[data-theme='dark'] input[type='number']::-webkit-inner-spin-button {
  /* lighten the arrows so they don't disappear */
  filter: invert(0.9) brightness(1.2);
}

/* FIREFOX tweaks --------------------------------------- */
/* (FF hides steppers by default; if you *want* that, keep this.
   If you want steppers, REMOVE this block.) */
@-moz-document url-prefix() {
  :root[data-theme='dark'] input[type='number'] {
    /* default FF look is already readable with color-scheme: dark */
    /* uncomment to hide steppers:
    -moz-appearance: textfield;
    */
  }
}

/* DISABLED PLACEHOLDER contrast (optional tidy-up) */
:root[data-theme='dark'] .input:disabled::placeholder,
:root[data-theme='dark'] textarea.input:disabled::placeholder {
  color: #7a8699;
}

.modal-overlay {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.55);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}
.modal {
  width: min(90vw, 700px);
  max-width: 1000px;
}

.footer {
  padding: 5px;
}

.nowrap {
  white-space: nowrap;
}
.pager-size {
  width: auto;
  padding: 2px 2px;
  border: 1px solid var(--border-strong);
  color: var(--text);
  border-radius: 3px;
  font-size: 0.92rem;
  outline: none;
}

.pager-buttons button {
  min-width: 25px;
  padding: 2px 2px;
  border: solid 1px;
  border-color: #808080;
  border-radius: 3px;
}

.table.list thead {
  top: 100px;
  position: sticky;
  z-index: 2;
}

.filter-trigger {
  position: relative;
  display: inline-block;
}
.filter-popover {
  position: absolute;
  top: 100%;
  z-index: 200;
  background: #fff;
  border: 1px solid #ddd;
  border-radius: 8px;
  padding: 12px;
  margin-top: 6px;
  min-width: 400px;
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.12);
}
.filter-row {
  display: grid;
  grid-template-columns: 120px 1fr;
  gap: 8px;
  align-items: center;
  margin-bottom: 8px;
}
.filter-actions {
  display: flex;
  justify-content: space-between;
  gap: 8px;
  margin-top: 8px;
}
.filter-actions button {
  padding: 6px 10px;
}

.text-sm {
  font-size: small;
}
